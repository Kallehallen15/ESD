{"ast":null,"code":"var _jsxFileName = \"/home/mintunnaing/Desktop/project-x/ESD/t2/src/components/Output.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport Button from '@mui/material/Button';\nimport { setCookie, getCookie } from '../lib/cookie.js';\nimport styles from './Output.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Output = props => {\n  _s();\n\n  // Currently receieved string & list of previous receieved lines\n  const received = useRef('');\n  const [lines, setLines] = useState([]);\n  useEffect(() => {\n    const str = `${received.current}${props.received.value}`;\n    const lines = str.split('\\n');\n    let newReceived = str;\n    const newLines = [];\n\n    if (lines.length > 1) {\n      newReceived = lines.pop();\n      lines.forEach(line => {\n        newLines.push(`${line}`);\n      });\n    }\n\n    setLines(current => current.concat(newLines));\n    received.current = newReceived;\n  }, [props.received]); // Output toggle Visibility\n\n  const loadOpen = () => {\n    const cookieValue = getCookie('output');\n    return cookieValue ? cookieValue === 'true' : true;\n  };\n\n  const openOutput = value => {\n    setVisible(value);\n    setCookie('output', value);\n  };\n\n  const [visible, setVisible] = React.useState(loadOpen());\n  return /*#__PURE__*/_jsxDEV(\"pre\", {\n    className: styles.pre,\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: visible,\n          onChange: e => openOutput(e.target.checked),\n          icon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 35\n          }, this),\n          checkedIcon: /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this),\n        label: \"Output\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), visible && /*#__PURE__*/_jsxDEV(Button, {\n        endIcon: /*#__PURE__*/_jsxDEV(OpenInNewIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 34\n        }, this),\n        sx: {\n          float: 'right'\n        },\n        href: \"https://serial.huhn.me/\",\n        children: \"Terminal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), visible && /*#__PURE__*/_jsxDEV(Box, {\n      className: styles.box,\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        className: styles.code,\n        children: lines.map((line, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 39\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Output, \"d7op54AK1n4gTRlmXp6Wfl0sSgU=\");\n\n_c = Output;\nOutput.propTypes = {\n  received: PropTypes.object\n};\nexport default Output;\n\nvar _c;\n\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"names":["React","useEffect","useRef","useState","PropTypes","Box","FormControlLabel","Checkbox","ChevronRightIcon","KeyboardArrowDownIcon","OpenInNewIcon","Button","setCookie","getCookie","styles","Output","props","received","lines","setLines","str","current","value","split","newReceived","newLines","length","pop","forEach","line","push","concat","loadOpen","cookieValue","openOutput","setVisible","visible","pre","e","target","checked","float","box","code","map","i","propTypes","object"],"sources":["/home/mintunnaing/Desktop/project-x/ESD/t2/src/components/Output.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Box from '@mui/material/Box'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Checkbox from '@mui/material/Checkbox'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew'\nimport Button from '@mui/material/Button'\n\nimport { setCookie, getCookie } from '../lib/cookie.js'\nimport styles from './Output.module.css'\n\nconst Output = (props) => {\n    // Currently receieved string & list of previous receieved lines\n    const received = useRef('')\n    const [lines, setLines] = useState([])\n\n    useEffect(\n        () => {\n            const str = `${received.current}${props.received.value}`\n            const lines = str.split('\\n')\n\n            let newReceived = str\n            const newLines = []\n\n            if (lines.length > 1) {\n                newReceived = lines.pop()\n\n                lines.forEach(line => {\n                    newLines.push(`${line}`)\n                })\n            }\n            setLines((current) => current.concat(newLines))\n            received.current = newReceived\n        },\n        [props.received],\n    )\n\n    // Output toggle Visibility\n    const loadOpen = () => {\n        const cookieValue = getCookie('output')\n        return cookieValue ? (cookieValue === 'true') : true\n    }\n\n    const openOutput = (value) => {\n        setVisible(value)\n        setCookie('output', value)\n    }\n\n    const [visible, setVisible] = React.useState(loadOpen())\n\n    return (\n        <pre className={styles.pre}>\n            <>\n                { /* Toggle */}\n                <FormControlLabel\n                    control={\n                        <Checkbox\n                            checked={visible}\n                            onChange={e => openOutput(e.target.checked)}\n                            icon={<ChevronRightIcon />}\n                            checkedIcon={<KeyboardArrowDownIcon />}\n                        />\n                    }\n                    label=\"Output\"\n\n                />\n\n                { /* Button */}\n                {visible &&\n                    <Button\n                        endIcon={<OpenInNewIcon />}\n                        sx={{ float: 'right' }}\n                        href='https://serial.huhn.me/'\n                    >\n                        Terminal\n                    </Button>\n                }\n            </>\n\n            { /* Actual Output */}\n            {visible &&\n                <Box className={styles.box}>\n                    <code className={styles.code}>\n\n                        { /* Lines */}\n                        {lines.map((line, i) => (\n                            <span key={i}>\n                                {line}<br />\n                            </span>\n                        ))}\n\n                    </code>\n                </Box>\n            }\n        </pre>\n    )\n}\n\nOutput.propTypes = {\n    received: PropTypes.object,\n}\n\nexport default Output"],"mappings":"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"},"metadata":{},"sourceType":"module"}