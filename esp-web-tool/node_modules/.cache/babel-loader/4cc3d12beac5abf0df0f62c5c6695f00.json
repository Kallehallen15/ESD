{"ast":null,"code":"var _jsxFileName = \"/home/mintunnaing/Desktop/project-x/ESD/espwebtool/src/components/FileList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport DriveFolderUploadIcon from '@mui/icons-material/DriveFolderUpload';\nimport AddBoxIcon from '@mui/icons-material/AddBox';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\nimport styles from './FileList.module.css';\nimport { defaultFiles, saveFiles } from '../lib/esp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileList = props => {\n  const addFile = () => {\n    props.setUploads([...props.uploads, {\n      offset: 0\n    }]);\n  };\n\n  const reset = () => {\n    const newUploads = defaultFiles(props.chipName);\n    saveFiles(newUploads);\n    props.setUploads(newUploads);\n  };\n\n  const uploadFile = (e, i) => {\n    const newUploads = [...props.uploads];\n    newUploads[i] = { ...newUploads[i],\n      fileName: e.target.files[0].name,\n      obj: e.target.files[0]\n    };\n    saveFiles(newUploads);\n    props.setUploads(newUploads);\n  };\n\n  const setOffset = (index, newOffset) => {\n    const newUploads = [...props.uploads];\n    newUploads[index] = { ...props.uploads[index],\n      offset: newOffset\n    };\n    saveFiles(newUploads);\n    props.setUploads(newUploads);\n  };\n\n  const deleteFile = index => {\n    const file = props.uploads[index];\n    const newUploads = [...props.uploads];\n\n    if (file.fileName) {\n      newUploads[index] = { ...newUploads[index],\n        fileName: undefined,\n        obj: undefined\n      };\n    } else {\n      newUploads.splice(index, 1);\n    }\n\n    saveFiles(newUploads);\n    props.setUploads(newUploads);\n  };\n\n  const onlyHex = e => {\n    const re = /[0-9a-fA-F]+/g;\n    if (!re.test(e.key)) e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    textAlign: \"center\",\n    className: styles.box,\n    children: [props.uploads.map((file, i) => /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 0,\n      className: styles.fileItem,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        className: styles.fileOffset,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"0x\",\n          variant: \"outlined\",\n          size: \"small\",\n          value: file.offset,\n          onKeyDown: onlyHex,\n          onChange: e => setOffset(i, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: file.fileName ? /*#__PURE__*/_jsxDEV(Typography, {\n          className: styles.fileName,\n          children: file.fileName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          component: \"label\",\n          endIcon: /*#__PURE__*/_jsxDEV(DriveFolderUploadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 99\n          }, this),\n          children: [\"Select\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            hidden: true,\n            onChange: e => uploadFile(e, i)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"error\",\n          onClick: () => deleteFile(i),\n          children: file.fileName ? /*#__PURE__*/_jsxDEV(HighlightOffIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: .5,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        sx: {\n          textAlign: 'left'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"error\",\n          component: \"label\",\n          size: \"large\",\n          onClick: reset,\n          endIcon: /*#__PURE__*/_jsxDEV(RestartAltIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 99\n          }, this),\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        sx: {\n          textAlign: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          component: \"label\",\n          size: \"large\",\n          onClick: addFile,\n          endIcon: /*#__PURE__*/_jsxDEV(AddBoxIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 103\n          }, this),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_c = FileList;\nFileList.propTypes = {\n  uploads: PropTypes.array,\n  setUploads: PropTypes.func,\n  chipName: PropTypes.string\n};\nexport default FileList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileList\");","map":{"version":3,"names":["React","PropTypes","Grid","Box","Button","IconButton","TextField","Typography","DriveFolderUploadIcon","AddBoxIcon","DeleteIcon","HighlightOffIcon","RestartAltIcon","styles","defaultFiles","saveFiles","FileList","props","addFile","setUploads","uploads","offset","reset","newUploads","chipName","uploadFile","e","i","fileName","target","files","name","obj","setOffset","index","newOffset","deleteFile","file","undefined","splice","onlyHex","re","test","key","preventDefault","box","map","fileItem","fileOffset","value","textAlign","propTypes","array","func","string"],"sources":["/home/mintunnaing/Desktop/project-x/ESD/espwebtool/src/components/FileList.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Grid from '@mui/material/Grid'\nimport Box from '@mui/material/Box'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport TextField from '@mui/material/TextField'\nimport Typography from '@mui/material/Typography'\nimport DriveFolderUploadIcon from '@mui/icons-material/DriveFolderUpload'\nimport AddBoxIcon from '@mui/icons-material/AddBox'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff'\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\n\nimport styles from './FileList.module.css'\n\nimport { defaultFiles, saveFiles } from '../lib/esp'\n\nconst FileList = (props) => {\n    const addFile = () => {\n        props.setUploads([...props.uploads, {\n            offset: 0\n        }])\n    }\n\n    const reset = () => {\n        const newUploads = defaultFiles(props.chipName)\n\n        saveFiles(newUploads)\n        props.setUploads(newUploads)\n    }\n\n    const uploadFile = (e, i) => {\n        const newUploads = [...props.uploads]\n\n        newUploads[i] = {\n            ...newUploads[i],\n            fileName: e.target.files[0].name,\n            obj: e.target.files[0],\n        }\n\n        saveFiles(newUploads)\n        props.setUploads(newUploads)\n    }\n\n    const setOffset = (index, newOffset) => {\n        const newUploads = [...props.uploads]\n        newUploads[index] = {\n            ...props.uploads[index],\n            offset: newOffset\n        }\n\n        saveFiles(newUploads)\n        props.setUploads(newUploads)\n    }\n\n    const deleteFile = (index) => {\n        const file = props.uploads[index]\n        const newUploads = [...props.uploads]\n\n        if (file.fileName) {\n            newUploads[index] = {\n                ...newUploads[index],\n                fileName: undefined,\n                obj: undefined,\n            }\n        } else {\n            newUploads.splice(index, 1)\n        }\n\n        saveFiles(newUploads)\n        props.setUploads(newUploads)\n    }\n\n    const onlyHex = (e) => {\n        const re = /[0-9a-fA-F]+/g\n        if (!re.test(e.key)) e.preventDefault()\n    }\n\n    return (\n        <Box textAlign='center' className={styles.box}>\n            {props.uploads.map((file, i) =>\n                <Grid container spacing={0} className={styles.fileItem} key={i}>\n                    {/* Offset */}\n                    <Grid item xs={2} className={styles.fileOffset}>\n                        <TextField\n                            label='0x'\n                            variant='outlined'\n                            size='small'\n                            value={file.offset}\n                            onKeyDown={onlyHex}\n                            onChange={(e) => setOffset(i, e.target.value)}\n                        />\n                    </Grid>\n\n                    {/* File Name */}\n                    <Grid item xs={9}>\n                        {file.fileName ?\n                            <Typography className={styles.fileName}>\n                                {file.fileName}\n                            </Typography>\n                            :\n                            <Button variant='outlined' color='primary' component='label' endIcon={<DriveFolderUploadIcon />}>\n                                Select\n                                <input\n                                    type='file'\n                                    hidden\n                                    onChange={(e) => uploadFile(e, i)}\n                                />\n                            </Button>\n                        }\n                    </Grid>\n\n                    {/* Delete */}\n                    <Grid item xs={1}>\n                        <IconButton\n                            color='error'\n                            onClick={() => deleteFile(i)}\n                        >\n                            {file.fileName ?\n                                <HighlightOffIcon />\n                                :\n                                <DeleteIcon />\n                            }\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            )}\n\n            {/* Add File */}\n            <Grid container spacing={.5}>\n                <Grid item xs={6} sx={{ textAlign: 'left' }}>\n                    <Button color='error' component='label' size='large' onClick={reset} endIcon={<RestartAltIcon />}>\n                        Reset\n                    </Button>\n                </Grid>\n                <Grid item xs={6} sx={{ textAlign: 'right' }}>\n                    <Button color='primary' component='label' size='large' onClick={addFile} endIcon={<AddBoxIcon />}>\n                        Add\n                    </Button>\n                </Grid>\n            </Grid>\n        </Box>\n    )\n}\n\nFileList.propTypes = {\n    uploads: PropTypes.array,\n    setUploads: PropTypes.func,\n    chipName: PropTypes.string,\n}\n\nexport default FileList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,YAAxC;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EACxB,MAAMC,OAAO,GAAG,MAAM;IAClBD,KAAK,CAACE,UAAN,CAAiB,CAAC,GAAGF,KAAK,CAACG,OAAV,EAAmB;MAChCC,MAAM,EAAE;IADwB,CAAnB,CAAjB;EAGH,CAJD;;EAMA,MAAMC,KAAK,GAAG,MAAM;IAChB,MAAMC,UAAU,GAAGT,YAAY,CAACG,KAAK,CAACO,QAAP,CAA/B;IAEAT,SAAS,CAACQ,UAAD,CAAT;IACAN,KAAK,CAACE,UAAN,CAAiBI,UAAjB;EACH,CALD;;EAOA,MAAME,UAAU,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;IACzB,MAAMJ,UAAU,GAAG,CAAC,GAAGN,KAAK,CAACG,OAAV,CAAnB;IAEAG,UAAU,CAACI,CAAD,CAAV,GAAgB,EACZ,GAAGJ,UAAU,CAACI,CAAD,CADD;MAEZC,QAAQ,EAAEF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBC,IAFhB;MAGZC,GAAG,EAAEN,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf;IAHO,CAAhB;IAMAf,SAAS,CAACQ,UAAD,CAAT;IACAN,KAAK,CAACE,UAAN,CAAiBI,UAAjB;EACH,CAXD;;EAaA,MAAMU,SAAS,GAAG,CAACC,KAAD,EAAQC,SAAR,KAAsB;IACpC,MAAMZ,UAAU,GAAG,CAAC,GAAGN,KAAK,CAACG,OAAV,CAAnB;IACAG,UAAU,CAACW,KAAD,CAAV,GAAoB,EAChB,GAAGjB,KAAK,CAACG,OAAN,CAAcc,KAAd,CADa;MAEhBb,MAAM,EAAEc;IAFQ,CAApB;IAKApB,SAAS,CAACQ,UAAD,CAAT;IACAN,KAAK,CAACE,UAAN,CAAiBI,UAAjB;EACH,CATD;;EAWA,MAAMa,UAAU,GAAIF,KAAD,IAAW;IAC1B,MAAMG,IAAI,GAAGpB,KAAK,CAACG,OAAN,CAAcc,KAAd,CAAb;IACA,MAAMX,UAAU,GAAG,CAAC,GAAGN,KAAK,CAACG,OAAV,CAAnB;;IAEA,IAAIiB,IAAI,CAACT,QAAT,EAAmB;MACfL,UAAU,CAACW,KAAD,CAAV,GAAoB,EAChB,GAAGX,UAAU,CAACW,KAAD,CADG;QAEhBN,QAAQ,EAAEU,SAFM;QAGhBN,GAAG,EAAEM;MAHW,CAApB;IAKH,CAND,MAMO;MACHf,UAAU,CAACgB,MAAX,CAAkBL,KAAlB,EAAyB,CAAzB;IACH;;IAEDnB,SAAS,CAACQ,UAAD,CAAT;IACAN,KAAK,CAACE,UAAN,CAAiBI,UAAjB;EACH,CAhBD;;EAkBA,MAAMiB,OAAO,GAAId,CAAD,IAAO;IACnB,MAAMe,EAAE,GAAG,eAAX;IACA,IAAI,CAACA,EAAE,CAACC,IAAH,CAAQhB,CAAC,CAACiB,GAAV,CAAL,EAAqBjB,CAAC,CAACkB,cAAF;EACxB,CAHD;;EAKA,oBACI,QAAC,GAAD;IAAK,SAAS,EAAC,QAAf;IAAwB,SAAS,EAAE/B,MAAM,CAACgC,GAA1C;IAAA,WACK5B,KAAK,CAACG,OAAN,CAAc0B,GAAd,CAAkB,CAACT,IAAD,EAAOV,CAAP,kBACf,QAAC,IAAD;MAAM,SAAS,MAAf;MAAgB,OAAO,EAAE,CAAzB;MAA4B,SAAS,EAAEd,MAAM,CAACkC,QAA9C;MAAA,wBAEI,QAAC,IAAD;QAAM,IAAI,MAAV;QAAW,EAAE,EAAE,CAAf;QAAkB,SAAS,EAAElC,MAAM,CAACmC,UAApC;QAAA,uBACI,QAAC,SAAD;UACI,KAAK,EAAC,IADV;UAEI,OAAO,EAAC,UAFZ;UAGI,IAAI,EAAC,OAHT;UAII,KAAK,EAAEX,IAAI,CAAChB,MAJhB;UAKI,SAAS,EAAEmB,OALf;UAMI,QAAQ,EAAGd,CAAD,IAAOO,SAAS,CAACN,CAAD,EAAID,CAAC,CAACG,MAAF,CAASoB,KAAb;QAN9B;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAFJ,eAcI,QAAC,IAAD;QAAM,IAAI,MAAV;QAAW,EAAE,EAAE,CAAf;QAAA,UACKZ,IAAI,CAACT,QAAL,gBACG,QAAC,UAAD;UAAY,SAAS,EAAEf,MAAM,CAACe,QAA9B;UAAA,UACKS,IAAI,CAACT;QADV;UAAA;UAAA;UAAA;QAAA,QADH,gBAKG,QAAC,MAAD;UAAQ,OAAO,EAAC,UAAhB;UAA2B,KAAK,EAAC,SAAjC;UAA2C,SAAS,EAAC,OAArD;UAA6D,OAAO,eAAE,QAAC,qBAAD;YAAA;YAAA;YAAA;UAAA,QAAtE;UAAA,kCAEI;YACI,IAAI,EAAC,MADT;YAEI,MAAM,MAFV;YAGI,QAAQ,EAAGF,CAAD,IAAOD,UAAU,CAACC,CAAD,EAAIC,CAAJ;UAH/B;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA;MANR;QAAA;QAAA;QAAA;MAAA,QAdJ,eAgCI,QAAC,IAAD;QAAM,IAAI,MAAV;QAAW,EAAE,EAAE,CAAf;QAAA,uBACI,QAAC,UAAD;UACI,KAAK,EAAC,OADV;UAEI,OAAO,EAAE,MAAMS,UAAU,CAACT,CAAD,CAF7B;UAAA,UAIKU,IAAI,CAACT,QAAL,gBACG,QAAC,gBAAD;YAAA;YAAA;YAAA;UAAA,QADH,gBAGG,QAAC,UAAD;YAAA;YAAA;YAAA;UAAA;QAPR;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAhCJ;IAAA,GAA6DD,CAA7D;MAAA;MAAA;MAAA;IAAA,QADH,CADL,eAkDI,QAAC,IAAD;MAAM,SAAS,MAAf;MAAgB,OAAO,EAAE,EAAzB;MAAA,wBACI,QAAC,IAAD;QAAM,IAAI,MAAV;QAAW,EAAE,EAAE,CAAf;QAAkB,EAAE,EAAE;UAAEuB,SAAS,EAAE;QAAb,CAAtB;QAAA,uBACI,QAAC,MAAD;UAAQ,KAAK,EAAC,OAAd;UAAsB,SAAS,EAAC,OAAhC;UAAwC,IAAI,EAAC,OAA7C;UAAqD,OAAO,EAAE5B,KAA9D;UAAqE,OAAO,eAAE,QAAC,cAAD;YAAA;YAAA;YAAA;UAAA,QAA9E;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAMI,QAAC,IAAD;QAAM,IAAI,MAAV;QAAW,EAAE,EAAE,CAAf;QAAkB,EAAE,EAAE;UAAE4B,SAAS,EAAE;QAAb,CAAtB;QAAA,uBACI,QAAC,MAAD;UAAQ,KAAK,EAAC,SAAd;UAAwB,SAAS,EAAC,OAAlC;UAA0C,IAAI,EAAC,OAA/C;UAAuD,OAAO,EAAEhC,OAAhE;UAAyE,OAAO,eAAE,QAAC,UAAD;YAAA;YAAA;YAAA;UAAA,QAAlF;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QANJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAlDJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiEH,CA9HD;;KAAMF,Q;AAgINA,QAAQ,CAACmC,SAAT,GAAqB;EACjB/B,OAAO,EAAEnB,SAAS,CAACmD,KADF;EAEjBjC,UAAU,EAAElB,SAAS,CAACoD,IAFL;EAGjB7B,QAAQ,EAAEvB,SAAS,CAACqD;AAHH,CAArB;AAMA,eAAetC,QAAf"},"metadata":{},"sourceType":"module"}