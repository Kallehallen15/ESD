{"ast":null,"code":"var _jsxFileName = \"/home/mintunnaing/Desktop/project-x/ESD/esp-web-tool/src/components/Settings.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport { baudrates, saveSettings } from '../lib/settings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settings = props => {\n  _s();\n\n  const [baudRate, setBaudRate] = React.useState(props.settings.baudRate);\n\n  const cancel = () => {\n    setBaudRate(props.settings.baudRate);\n    props.close();\n  };\n\n  const reset = () => {\n    if (!props.connected) setBaudRate(115200);\n  };\n\n  const save = () => {\n    saveSettings({\n      baudRate: baudRate\n    });\n    props.setSettings({\n      baudRate: baudRate\n    });\n    props.close();\n    toast.success('Settings saved ✨', {\n      position: 'top-center',\n      autoClose: 3000,\n      toastId: 'settings'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: props.open,\n    onClose: props.close,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"Serial Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"filled\",\n        fullWidth: true,\n        sx: {\n          mt: 1,\n          minWidth: '10em'\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: [\"Baud Rate \", props.connected && '(Requires Reconnect)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: baudRate,\n          onChange: e => setBaudRate(e.target.value),\n          label: \"baudrate\",\n          disabled: props.connected,\n          children: baudrates.map(baud => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: baud,\n            children: [baud, \" baud\"]\n          }, baud, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: reset,\n        color: \"error\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: cancel,\n        color: \"secondary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: save,\n        color: \"primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Settings, \"s4qUBoteGl762QpgY25Wvt94uBw=\");\n\n_c = Settings;\nSettings.propTypes = {\n  open: PropTypes.bool,\n  close: PropTypes.func,\n  settings: PropTypes.object,\n  setSettings: PropTypes.func,\n  connected: PropTypes.bool\n};\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","PropTypes","toast","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","Select","MenuItem","InputLabel","baudrates","saveSettings","Settings","props","baudRate","setBaudRate","useState","settings","cancel","close","reset","connected","save","setSettings","success","position","autoClose","toastId","open","mt","minWidth","e","target","value","map","baud","propTypes","bool","func","object"],"sources":["/home/mintunnaing/Desktop/project-x/ESD/esp-web-tool/src/components/Settings.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { toast } from 'react-toastify'\n\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport FormControl from '@mui/material/FormControl'\nimport Select from '@mui/material/Select'\nimport MenuItem from '@mui/material/MenuItem'\nimport InputLabel from '@mui/material/InputLabel'\n\nimport { baudrates, saveSettings } from '../lib/settings'\n\nconst Settings = (props) => {\n    const [baudRate, setBaudRate] = React.useState(props.settings.baudRate)\n\n    const cancel = () => {\n        setBaudRate(props.settings.baudRate)\n        props.close()\n    }\n\n    const reset = () => {\n        if (!props.connected) setBaudRate(115200)\n    }\n\n    const save = () => {\n        saveSettings({ baudRate: baudRate })\n        props.setSettings({ baudRate: baudRate })\n        props.close()\n        toast.success('Settings saved ✨', { position: 'top-center', autoClose: 3000, toastId: 'settings' })\n    }\n\n    return (\n        <Dialog open={props.open} onClose={props.close}>\n            <DialogTitle>Settings</DialogTitle>\n\n            <DialogContent>\n                <DialogContentText>\n                    Serial Connection\n                </DialogContentText>\n\n                <FormControl variant='filled' fullWidth sx={{ mt: 1, minWidth: '10em' }}>\n                    <InputLabel>Baud Rate {props.connected && '(Requires Reconnect)'}</InputLabel>\n                    <Select\n                        value={baudRate}\n                        onChange={(e) => setBaudRate(e.target.value)}\n                        label='baudrate'\n                        disabled={props.connected}\n                    >\n                        {baudrates.map(baud =>\n                            <MenuItem value={baud} key={baud}>{baud} baud</MenuItem>\n                        )}\n                    </Select>\n                </FormControl>\n            </DialogContent>\n\n            <DialogActions>\n                <Button onClick={reset} color='error'>Reset</Button>\n                <Button onClick={cancel} color='secondary'>Cancel</Button>\n                <Button onClick={save} color='primary'>Save</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nSettings.propTypes = {\n    open: PropTypes.bool,\n    close: PropTypes.func,\n    settings: PropTypes.object,\n    setSettings: PropTypes.func,\n    connected: PropTypes.bool,\n}\n\nexport default Settings"],"mappings":"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"},"metadata":{},"sourceType":"module"}